#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <100>;
};

&lt {
    require-prior-idle-ms = <100>;
    quick-tap-ms = <200>;
};

&soft_off { hold-time-ms = <3000>; };

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
            label = "Home row mod left";
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
            label = "Home row mod right";
        };

        bot: bluetooth_output {
            compatible = "zmk,behavior-mod-morph";
            label = "Bluetooth output (shift mod)";
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtboot: dt_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap bootloader";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        dttap: dt_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Tap layer";
            #binding-cells = <0>;
            bindings = <&none>, <&to 2>;
        };

        dtextra: dt_extra {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Extra layer";
            #binding-cells = <0>;
            bindings = <&none>, <&to 1>;
        };

        dtbase: dt_base {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Base layer";
            #binding-cells = <0>;
            bindings = <&none>, <&to 0>;
        };

        dtmedia: dtmedia {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Media layer";
            #binding-cells = <0>;
            bindings = <&none>, <&tog 4>;
        };

        dtnav: dtnav {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Nav layer";
            #binding-cells = <0>;
            bindings = <&none>, <&tog 5>;
        };

        dtmouse: dtmouse {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Mouse layer";
            #binding-cells = <0>;
            bindings = <&none>, <&tog 6>;
        };

        dtsym: dtsym {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Sym layer";
            #binding-cells = <0>;
            bindings = <&none>, <&tog 7>;
        };

        dtnum: dtnum {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Num layer";
            #binding-cells = <0>;
            bindings = <&none>, <&tog 8>;
        };

        dtfun: dtfun {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap Fun layer";
            #binding-cells = <0>;
            bindings = <&none>, <&tog 9>;
        };

        gquote: gquote {
            compatible = "zmk,behavior-mod-morph";
            label = "GQUOTE";
            bindings = <&kp SQT>, <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        gdot: gdot {
            compatible = "zmk,behavior-mod-morph";
            label = "GDOT";
            bindings = <&kp DOT>, <&kp GT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        gminus: gminus {
            compatible = "zmk,behavior-mod-morph";
            label = "GMINUS";
            bindings = <&kp MINUS>, <&kp DQT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        gslash: gslash {
            compatible = "zmk,behavior-mod-morph";
            label = "GSLASH";
            bindings = <&kp SLASH>, <&kp LT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        gcomma: gcomma {
            compatible = "zmk,behavior-mod-morph";
            label = "GCOMMA";
            bindings = <&kp COMMA>, <&kp QMARK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        gbutton_gslash: gbutton_gslash {
            compatible = "zmk,behavior-hold-tap";
            label = "GBUTTON_GSLASH";
            bindings = <&mo>, <&gslash>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <100>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q        &kp W        &kp E         &kp R         &kp T                                  &kp Y       &kp U         &kp I         &kp O        &kp P
  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G                                  &kp H       &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMI
  &lt 3 Z      &kp X        &kp C         &kp V         &kp B                                  &kp N       &kp M         &kp COMMA     &kp DOT      &lt 3 FSLH
                                          &lt 4 ESC     &lt 5 SPACE  &lt 6 TAB    &lt 7 ENTER  &lt 8 BSPC  &lt 9 DEL
            >;
        };

        Extra {
            bindings = <
  &kp B        &kp L        &kp D         &kp W         &kp Z                                   &gquote      &kp F         &kp O         &kp J        &kp SEMI
  &hml LGUI N  &hml LALT R  &hml LCTRL T  &hml LSHFT S  &kp G                                   &kp Y        &hmr RSHFT H  &hmr RCTRL A  &hmr RALT E  &hmr RGUI I
  &lt 3 Q      &kp X        &kp M         &kp C         &kp V                                   &kp K        &kp P         &gdot         &gminus      &gbutton_gslash 3 0
                                          &lt 4 ESC     &lt 5 SPACE  &lt 6 TAB    &lt 10 ENTER  &lt 11 BSPC  &lt 9 DEL
            >;
        };

        Tap {
            bindings = <
  &kp Q  &kp W  &kp E  &kp R      &kp T                                  &kp Y       &kp U      &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F      &kp G                                  &kp H       &kp J      &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C  &kp V      &kp B                                  &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH
                       &lt 4 ESC  &lt 5 SPACE  &lt 6 TAB    &lt 7 ENTER  &lt 8 BSPC  &lt 9 DEL
            >;
        };

        Button {
            bindings = <
  &kp K_UNDO  &kp K_CUT      &kp K_COPY       &kp K_PASTE     &kp K_AGAIN                        &kp K_AGAIN  &kp K_PASTE     &kp K_COPY       &kp K_CUT     &kp K_UNDO
  &kp LGUI    &mt LALT BSPC  &mt LCTRL ENTER  &mt LSHIFT DEL  &none                              &none        &mt RSHFT BSPC  &mt RCTRL ENTER  &mt RALT DEL  &kp RGUI
  &trans      &kp ESC        &kp SPACE        &kp TAB         &none                              &none        &kp TAB         &kp SPACE        &kp ESC       &trans
                                              &mkp MB3        &mkp MB1     &mkp MB2    &mkp MB2  &mkp MB1     &mkp MB3
            >;
        };

        Media {
            bindings = <
  &dtboot   &dttap    &dtextra   &dtbase    &none                         &bt BT_CLR    &bot          &soft_off     &studio_unlock  &kp F15
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                         &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT      &kp LG(SPACE)
  &none     &none     &dtfun     &dtmedia   &none                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp F14
                                 &trans     &trans  &trans    &kp C_STOP  &kp C_PP      &kp C_MUTE
            >;
        };

        Nav {
            bindings = <
  &dtboot   &dttap    &dtextra   &dtbase     &none                        &kp K_AGAIN  &kp K_PASTE    &kp K_COPY   &kp K_CUT  &kp K_UNDO
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &none                        &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT  &kp CAPS
  &none     &none     &dtnum     &dtnav      &none                        &kp HOME     &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INS
                                 &trans      &trans  &trans    &kp ENTER  &kp BSPC     &kp DEL
            >;
        };

        Mouse {
            bindings = <
  &dtboot   &dttap    &dtextra   &dtbase     &none                       &kp K_AGAIN     &kp K_PASTE     &kp K_COPY    &kp K_CUT        &kp K_UNDO
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &none                       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp F17
  &none     &none     &dtsym     &dtmouse    &none                       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp F16
                                 &trans      &trans  &trans    &mkp MB2  &mkp MB1        &mkp MB3
            >;
        };

        Sym {
            bindings = <
  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC                       &none   &dtbase    &dtextra   &dttap    &dtboot
  &kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                       &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE                       &none   &dtsym     &dtmouse   &none     &none
                                  &kp LPAR   &kp RPAR  &kp UNDER    &trans  &trans  &trans
            >;
        };

        Num {
            bindings = <
  &kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                        &none   &dtbase     &dtextra   &dttap    &dtboot
  &kp SQT    &kp N4  &kp N5  &kp N6   &kp EQUAL                       &none   &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH                        &none   &dtnum      &dtnav     &none     &none
                             &kp DOT  &kp N0     &kp MINUS    &trans  &trans  &trans
            >;
        };

        Fun {
            bindings = <
  &kp F12  &kp F7  &kp F8  &kp F9         &kp PSCRN                           &none   &dtbase    &dtextra   &dttap    &dtboot
  &kp F11  &kp F4  &kp F5  &kp F6         &kp SLCK                            &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp F10  &kp F1  &kp F2  &kp F3         &kp PAUSE_BREAK                     &none   &dtfun     &dtmedia   &none     &none
                           &kp LA(SPACE)  &kp SPACE        &kp TAB    &trans  &trans  &trans
            >;
        };

        gSym {
            bindings = <
  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC                       &none   &dtbase    &dtextra   &dttap    &dtboot
  &kp QMARK  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                       &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE                       &none   &dtsym     &dtmouse   &none     &none
                                  &kp LPAR   &kp RPAR  &kp UNDER    &trans  &trans  &trans
            >;
        };

        gNum {
            bindings = <
  &kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                        &none   &dtbase     &dtextra   &dttap    &dtboot
  &gcomma    &kp N4  &kp N5  &kp N6   &kp EQUAL                       &none   &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH                        &none   &dtnum      &dtnav     &none     &none
                             &kp DOT  &kp N0     &kp MINUS    &trans  &trans  &trans
            >;
        };
    };
};
